backbone.jsにおけるメモ

【用語】Backbone.js
→JavaScriptのMVC(2)フレームワーク
→大規模開発やオブザーバー・パターン（オブジェクトの状態を観察するプログラム）で利用される。

【用語】underscore.js
→便利な関数が含まれているJavaScriptnoライブラリでBackbone.jsの中でも使用されている。

・公式サイトは英語だが、翻訳サイトもある
https://backbonejs.org/
https://github.com/enja-oss/Backbone

・FAQから読み解くBackbone.jsの特徴
★Backboneを利用するメリット
→データの問い合わせや操作に有用なメソッドが豊富に存在する。
→特定のテンプレートが存在しない。
→独自にHTMLタグを用意する必要がない。
→Backbone.jsはフレームワークではなく、ライブラリである。

★手段は豊富に存在している
→参照・制御方法は１種類ではなく、様々なアプローチの仕方が存在する。
→バッチ操作も同様である。
render関数の中でUIについても自由に描画できる。

【用語】ネスト
→入れ子のこと。

【用語】レンダリング
→表示用のスクリプトを整形し、実際に表示させること。
例として、htmlファイルの中身を整形し、よく見るホームページ画面をディスプレイ上に表示すること。

・Backbone.jsの入門
https://www.slideshare.net/otoyo0122/backbonejs-16753352
★Backbone.jsのオブジェクト
View→DOMの監視と操作

【用語】DOM
→ドキュメントオブモデルの略。文書の構造をメモリー内に表現することで、
ウェブページとスクリプトやプログラミング言語を接続するもの。
Model→データの取得・保存・更新・削除
Collection→Modelの集合
Router→URLの監視
History→Routerの履歴監視
これら５つで、Contorollerというオブジェクトはない。

基本的にModelとCollectionの動きは同じ
→相互にイベントを監視しており、必要となる方がWebAPIと非同期通信（Ajax）でデータのやり取りを行う。
Viewがさらに両者を監視している。

【用語】コールバック関数
→コールバックとは、コンピュータプログラム中で、ある関数などを呼び出す際に別の関数などを途中で実行するよう指定する手法のこと。
呼び出し側の用意した関数などを、呼び出し先のコードが「呼び出し返す」（callback）ように登録する。
例として、Aと呼ばれる関数が、途中にBという関数を呼んで処理を行わせるという処理となっていた場合のBがコールバック関数と呼ばれるものとなる。

★Backbone.Viewの説明
https://qiita.com/yuku_t/items/8ee2ed1949cd7c337f06
・Viewの役割
１：DOMの特定の部分木におけるイベントの監視
２：その部分木に対するDOM操作
【用語】el
→Viewが管理するDOMelementのことを指す、よくサンプルコードなどでelと記載される。
定義の仕方としては
クラス定義に書いてします方法
例）
var View1 = Backbone.View.extend({
    el: $("body")
});
と、インスタンス生成時に定義する方法がある。
例）
var view2 = new View2({el: $("#hoge")});
特に指定が無い場合は,<div></div>となる。

・elと$elの違い
→elはDOM要素として定義したもので$elはjQueryオブジェクトを指している。
そのため、$elはshow()やhide()といったjQueryのライブラリ関数を使用できる。
一方でelはこのBackbone.jsの中でオブジェクトのキーとして用意したものである。

★listenTo()について
→listenTo(a,b,c)はイベントを監視するためのメソッドで、
aで与えられたオブジェクトの中にあるbのイベントが発火したら、cを監視しろという意味になる。
また、イベントの監視を終了したい段階で、stopListening(c)をする。
これを忘れた場合、ずっと監視が続き処理回数が無限に増加する可能性がある。
